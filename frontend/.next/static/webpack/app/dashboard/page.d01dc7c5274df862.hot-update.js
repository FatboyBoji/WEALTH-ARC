"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/page",{

/***/ "(app-pages-browser)/./src/lib/dashboardApi.ts":
/*!*********************************!*\
  !*** ./src/lib/dashboardApi.ts ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAccountSummary: () => (/* binding */ getAccountSummary),\n/* harmony export */   getInsights: () => (/* binding */ getInsights),\n/* harmony export */   getRecentTransactions: () => (/* binding */ getRecentTransactions)\n/* harmony export */ });\n/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api */ \"(app-pages-browser)/./src/lib/api.ts\");\n\n// Mock data for development\nconst mockTransactions = [\n    {\n        id: '1',\n        name: 'Grocery Shopping',\n        amount: -82.45,\n        date: '2023-07-10',\n        category: 'Food & Groceries',\n        account: 'Main Account',\n        notes: 'Weekly grocery shopping'\n    },\n    {\n        id: '2',\n        name: 'Salary Payment',\n        amount: 2450.00,\n        date: '2023-07-01',\n        category: 'Income',\n        account: 'Main Account'\n    },\n    {\n        id: '3',\n        name: 'Electricity Bill',\n        amount: -68.32,\n        date: '2023-07-05',\n        category: 'Utilities',\n        account: 'Bills Account'\n    },\n    {\n        id: '4',\n        name: 'Restaurant Dinner',\n        amount: -45.80,\n        date: '2023-07-08',\n        category: 'Dining Out',\n        account: 'Main Account',\n        notes: 'Dinner with friends'\n    }\n];\nconst mockAccountSummary = {\n    totalBalance: 3570.25,\n    monthlyIncome: 2650.00,\n    monthlyExpenses: 1875.40,\n    savingsRate: 29\n};\nconst mockInsights = [\n    {\n        id: '1',\n        title: 'Spending Trend',\n        description: 'Your spending in Food & Groceries has decreased by 15% compared to last month.',\n        data: [\n            {\n                label: 'This Month',\n                value: '€320.45'\n            },\n            {\n                label: 'Last Month',\n                value: '€376.85'\n            },\n            {\n                label: 'Change',\n                value: '-15%'\n            }\n        ],\n        recommendation: 'Great job reducing your grocery expenses! Continue your smart shopping habits.',\n        category: 'spending'\n    },\n    {\n        id: '2',\n        title: 'Savings Opportunity',\n        description: 'You could save more by reducing your Dining Out expenses.',\n        data: [\n            {\n                label: 'Current Dining Expenses',\n                value: '€245.80'\n            },\n            {\n                label: 'Monthly Average',\n                value: '€180.25'\n            },\n            {\n                label: 'Potential Savings',\n                value: '€65.55'\n            }\n        ],\n        recommendation: 'Consider cooking at home one more night per week to increase your savings.',\n        category: 'savings'\n    }\n];\n// Dashboard API calls with fallback to mock data\nconst getRecentTransactions = async ()=>{\n    try {\n        const response = await _api__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get('/dashboard/transactions/recent');\n        return response.data.data;\n    } catch (error) {\n        console.log('Using mock transaction data');\n        return mockTransactions;\n    }\n};\nconst getAccountSummary = async ()=>{\n    try {\n        const response = await _api__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get('/dashboard/account/summary');\n        return response.data.data;\n    } catch (error) {\n        console.log('Using mock account summary data');\n        return mockAccountSummary;\n    }\n};\nconst getInsights = async ()=>{\n    try {\n        const response = await _api__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get('/dashboard/insights');\n        return response.data.data;\n    } catch (error) {\n        console.log('Using mock insights data');\n        return mockInsights;\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvZGFzaGJvYXJkQXBpLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBd0I7QUFzQ3hCLDRCQUE0QjtBQUM1QixNQUFNQyxtQkFBa0M7SUFDdEM7UUFDRUMsSUFBSTtRQUNKQyxNQUFNO1FBQ05DLFFBQVEsQ0FBQztRQUNUQyxNQUFNO1FBQ05DLFVBQVU7UUFDVkMsU0FBUztRQUNUQyxPQUFPO0lBQ1Q7SUFDQTtRQUNFTixJQUFJO1FBQ0pDLE1BQU07UUFDTkMsUUFBUTtRQUNSQyxNQUFNO1FBQ05DLFVBQVU7UUFDVkMsU0FBUztJQUNYO0lBQ0E7UUFDRUwsSUFBSTtRQUNKQyxNQUFNO1FBQ05DLFFBQVEsQ0FBQztRQUNUQyxNQUFNO1FBQ05DLFVBQVU7UUFDVkMsU0FBUztJQUNYO0lBQ0E7UUFDRUwsSUFBSTtRQUNKQyxNQUFNO1FBQ05DLFFBQVEsQ0FBQztRQUNUQyxNQUFNO1FBQ05DLFVBQVU7UUFDVkMsU0FBUztRQUNUQyxPQUFPO0lBQ1Q7Q0FDRDtBQUVELE1BQU1DLHFCQUFxQztJQUN6Q0MsY0FBYztJQUNkQyxlQUFlO0lBQ2ZDLGlCQUFpQjtJQUNqQkMsYUFBYTtBQUNmO0FBRUEsTUFBTUMsZUFBMEI7SUFDOUI7UUFDRVosSUFBSTtRQUNKYSxPQUFPO1FBQ1BDLGFBQWE7UUFDYkMsTUFBTTtZQUNKO2dCQUFFQyxPQUFPO2dCQUFjQyxPQUFPO1lBQVU7WUFDeEM7Z0JBQUVELE9BQU87Z0JBQWNDLE9BQU87WUFBVTtZQUN4QztnQkFBRUQsT0FBTztnQkFBVUMsT0FBTztZQUFPO1NBQ2xDO1FBQ0RDLGdCQUFnQjtRQUNoQmQsVUFBVTtJQUNaO0lBQ0E7UUFDRUosSUFBSTtRQUNKYSxPQUFPO1FBQ1BDLGFBQWE7UUFDYkMsTUFBTTtZQUNKO2dCQUFFQyxPQUFPO2dCQUEyQkMsT0FBTztZQUFVO1lBQ3JEO2dCQUFFRCxPQUFPO2dCQUFtQkMsT0FBTztZQUFVO1lBQzdDO2dCQUFFRCxPQUFPO2dCQUFxQkMsT0FBTztZQUFTO1NBQy9DO1FBQ0RDLGdCQUFnQjtRQUNoQmQsVUFBVTtJQUNaO0NBQ0Q7QUFFRCxpREFBaUQ7QUFDMUMsTUFBTWUsd0JBQXdCO0lBQ25DLElBQUk7UUFDRixNQUFNQyxXQUFXLE1BQU10Qiw0Q0FBR0EsQ0FBQ3VCLEdBQUcsQ0FBQztRQUMvQixPQUFPRCxTQUFTTCxJQUFJLENBQUNBLElBQUk7SUFDM0IsRUFBRSxPQUFPTyxPQUFPO1FBQ2RDLFFBQVFDLEdBQUcsQ0FBQztRQUNaLE9BQU96QjtJQUNUO0FBQ0YsRUFBRTtBQUVLLE1BQU0wQixvQkFBb0I7SUFDL0IsSUFBSTtRQUNGLE1BQU1MLFdBQVcsTUFBTXRCLDRDQUFHQSxDQUFDdUIsR0FBRyxDQUFDO1FBQy9CLE9BQU9ELFNBQVNMLElBQUksQ0FBQ0EsSUFBSTtJQUMzQixFQUFFLE9BQU9PLE9BQU87UUFDZEMsUUFBUUMsR0FBRyxDQUFDO1FBQ1osT0FBT2pCO0lBQ1Q7QUFDRixFQUFFO0FBRUssTUFBTW1CLGNBQWM7SUFDekIsSUFBSTtRQUNGLE1BQU1OLFdBQVcsTUFBTXRCLDRDQUFHQSxDQUFDdUIsR0FBRyxDQUFDO1FBQy9CLE9BQU9ELFNBQVNMLElBQUksQ0FBQ0EsSUFBSTtJQUMzQixFQUFFLE9BQU9PLE9BQU87UUFDZEMsUUFBUUMsR0FBRyxDQUFDO1FBQ1osT0FBT1o7SUFDVDtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2xpYi9kYXNoYm9hcmRBcGkudHM/NTcxMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXBpIGZyb20gJy4vYXBpJztcclxuXHJcbi8vIFRyYW5zYWN0aW9uIHR5cGVzXHJcbmV4cG9ydCBpbnRlcmZhY2UgVHJhbnNhY3Rpb24ge1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgbmFtZTogc3RyaW5nO1xyXG4gIGFtb3VudDogbnVtYmVyO1xyXG4gIGRhdGU6IHN0cmluZztcclxuICBjYXRlZ29yeTogc3RyaW5nO1xyXG4gIGFjY291bnQ6IHN0cmluZztcclxuICBub3Rlcz86IHN0cmluZztcclxufVxyXG5cclxuLy8gQWNjb3VudCBzdW1tYXJ5IHR5cGVzXHJcbmV4cG9ydCBpbnRlcmZhY2UgQWNjb3VudFN1bW1hcnkge1xyXG4gIHRvdGFsQmFsYW5jZTogbnVtYmVyO1xyXG4gIG1vbnRobHlJbmNvbWU6IG51bWJlcjtcclxuICBtb250aGx5RXhwZW5zZXM6IG51bWJlcjtcclxuICBzYXZpbmdzUmF0ZTogbnVtYmVyO1xyXG59XHJcblxyXG4vLyBJbnNpZ2h0IGRhdGEgcG9pbnQgdHlwZVxyXG5leHBvcnQgaW50ZXJmYWNlIEluc2lnaHREYXRhUG9pbnQge1xyXG4gIGxhYmVsOiBzdHJpbmc7XHJcbiAgdmFsdWU6IHN0cmluZyB8IG51bWJlcjtcclxufVxyXG5cclxuLy8gSW5zaWdodCB0eXBlXHJcbmV4cG9ydCBpbnRlcmZhY2UgSW5zaWdodCB7XHJcbiAgaWQ6IHN0cmluZztcclxuICB0aXRsZTogc3RyaW5nO1xyXG4gIGRlc2NyaXB0aW9uOiBzdHJpbmc7XHJcbiAgZGF0YT86IEluc2lnaHREYXRhUG9pbnRbXTtcclxuICByZWNvbW1lbmRhdGlvbj86IHN0cmluZztcclxuICBpY29uPzogc3RyaW5nO1xyXG4gIGNhdGVnb3J5Pzogc3RyaW5nO1xyXG59XHJcblxyXG4vLyBNb2NrIGRhdGEgZm9yIGRldmVsb3BtZW50XHJcbmNvbnN0IG1vY2tUcmFuc2FjdGlvbnM6IFRyYW5zYWN0aW9uW10gPSBbXHJcbiAge1xyXG4gICAgaWQ6ICcxJyxcclxuICAgIG5hbWU6ICdHcm9jZXJ5IFNob3BwaW5nJyxcclxuICAgIGFtb3VudDogLTgyLjQ1LFxyXG4gICAgZGF0ZTogJzIwMjMtMDctMTAnLFxyXG4gICAgY2F0ZWdvcnk6ICdGb29kICYgR3JvY2VyaWVzJyxcclxuICAgIGFjY291bnQ6ICdNYWluIEFjY291bnQnLFxyXG4gICAgbm90ZXM6ICdXZWVrbHkgZ3JvY2VyeSBzaG9wcGluZydcclxuICB9LFxyXG4gIHtcclxuICAgIGlkOiAnMicsXHJcbiAgICBuYW1lOiAnU2FsYXJ5IFBheW1lbnQnLFxyXG4gICAgYW1vdW50OiAyNDUwLjAwLFxyXG4gICAgZGF0ZTogJzIwMjMtMDctMDEnLFxyXG4gICAgY2F0ZWdvcnk6ICdJbmNvbWUnLFxyXG4gICAgYWNjb3VudDogJ01haW4gQWNjb3VudCdcclxuICB9LFxyXG4gIHtcclxuICAgIGlkOiAnMycsXHJcbiAgICBuYW1lOiAnRWxlY3RyaWNpdHkgQmlsbCcsXHJcbiAgICBhbW91bnQ6IC02OC4zMixcclxuICAgIGRhdGU6ICcyMDIzLTA3LTA1JyxcclxuICAgIGNhdGVnb3J5OiAnVXRpbGl0aWVzJyxcclxuICAgIGFjY291bnQ6ICdCaWxscyBBY2NvdW50J1xyXG4gIH0sXHJcbiAge1xyXG4gICAgaWQ6ICc0JyxcclxuICAgIG5hbWU6ICdSZXN0YXVyYW50IERpbm5lcicsXHJcbiAgICBhbW91bnQ6IC00NS44MCxcclxuICAgIGRhdGU6ICcyMDIzLTA3LTA4JyxcclxuICAgIGNhdGVnb3J5OiAnRGluaW5nIE91dCcsXHJcbiAgICBhY2NvdW50OiAnTWFpbiBBY2NvdW50JyxcclxuICAgIG5vdGVzOiAnRGlubmVyIHdpdGggZnJpZW5kcydcclxuICB9XHJcbl07XHJcblxyXG5jb25zdCBtb2NrQWNjb3VudFN1bW1hcnk6IEFjY291bnRTdW1tYXJ5ID0ge1xyXG4gIHRvdGFsQmFsYW5jZTogMzU3MC4yNSxcclxuICBtb250aGx5SW5jb21lOiAyNjUwLjAwLFxyXG4gIG1vbnRobHlFeHBlbnNlczogMTg3NS40MCxcclxuICBzYXZpbmdzUmF0ZTogMjlcclxufTtcclxuXHJcbmNvbnN0IG1vY2tJbnNpZ2h0czogSW5zaWdodFtdID0gW1xyXG4gIHtcclxuICAgIGlkOiAnMScsXHJcbiAgICB0aXRsZTogJ1NwZW5kaW5nIFRyZW5kJyxcclxuICAgIGRlc2NyaXB0aW9uOiAnWW91ciBzcGVuZGluZyBpbiBGb29kICYgR3JvY2VyaWVzIGhhcyBkZWNyZWFzZWQgYnkgMTUlIGNvbXBhcmVkIHRvIGxhc3QgbW9udGguJyxcclxuICAgIGRhdGE6IFtcclxuICAgICAgeyBsYWJlbDogJ1RoaXMgTW9udGgnLCB2YWx1ZTogJ+KCrDMyMC40NScgfSxcclxuICAgICAgeyBsYWJlbDogJ0xhc3QgTW9udGgnLCB2YWx1ZTogJ+KCrDM3Ni44NScgfSxcclxuICAgICAgeyBsYWJlbDogJ0NoYW5nZScsIHZhbHVlOiAnLTE1JScgfVxyXG4gICAgXSxcclxuICAgIHJlY29tbWVuZGF0aW9uOiAnR3JlYXQgam9iIHJlZHVjaW5nIHlvdXIgZ3JvY2VyeSBleHBlbnNlcyEgQ29udGludWUgeW91ciBzbWFydCBzaG9wcGluZyBoYWJpdHMuJyxcclxuICAgIGNhdGVnb3J5OiAnc3BlbmRpbmcnXHJcbiAgfSxcclxuICB7XHJcbiAgICBpZDogJzInLFxyXG4gICAgdGl0bGU6ICdTYXZpbmdzIE9wcG9ydHVuaXR5JyxcclxuICAgIGRlc2NyaXB0aW9uOiAnWW91IGNvdWxkIHNhdmUgbW9yZSBieSByZWR1Y2luZyB5b3VyIERpbmluZyBPdXQgZXhwZW5zZXMuJyxcclxuICAgIGRhdGE6IFtcclxuICAgICAgeyBsYWJlbDogJ0N1cnJlbnQgRGluaW5nIEV4cGVuc2VzJywgdmFsdWU6ICfigqwyNDUuODAnIH0sXHJcbiAgICAgIHsgbGFiZWw6ICdNb250aGx5IEF2ZXJhZ2UnLCB2YWx1ZTogJ+KCrDE4MC4yNScgfSxcclxuICAgICAgeyBsYWJlbDogJ1BvdGVudGlhbCBTYXZpbmdzJywgdmFsdWU6ICfigqw2NS41NScgfVxyXG4gICAgXSxcclxuICAgIHJlY29tbWVuZGF0aW9uOiAnQ29uc2lkZXIgY29va2luZyBhdCBob21lIG9uZSBtb3JlIG5pZ2h0IHBlciB3ZWVrIHRvIGluY3JlYXNlIHlvdXIgc2F2aW5ncy4nLFxyXG4gICAgY2F0ZWdvcnk6ICdzYXZpbmdzJ1xyXG4gIH1cclxuXTtcclxuXHJcbi8vIERhc2hib2FyZCBBUEkgY2FsbHMgd2l0aCBmYWxsYmFjayB0byBtb2NrIGRhdGFcclxuZXhwb3J0IGNvbnN0IGdldFJlY2VudFRyYW5zYWN0aW9ucyA9IGFzeW5jICgpID0+IHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBhcGkuZ2V0KCcvZGFzaGJvYXJkL3RyYW5zYWN0aW9ucy9yZWNlbnQnKTtcclxuICAgIHJldHVybiByZXNwb25zZS5kYXRhLmRhdGEgYXMgVHJhbnNhY3Rpb25bXTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5sb2coJ1VzaW5nIG1vY2sgdHJhbnNhY3Rpb24gZGF0YScpO1xyXG4gICAgcmV0dXJuIG1vY2tUcmFuc2FjdGlvbnM7XHJcbiAgfVxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGdldEFjY291bnRTdW1tYXJ5ID0gYXN5bmMgKCkgPT4ge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGFwaS5nZXQoJy9kYXNoYm9hcmQvYWNjb3VudC9zdW1tYXJ5Jyk7XHJcbiAgICByZXR1cm4gcmVzcG9uc2UuZGF0YS5kYXRhIGFzIEFjY291bnRTdW1tYXJ5O1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmxvZygnVXNpbmcgbW9jayBhY2NvdW50IHN1bW1hcnkgZGF0YScpO1xyXG4gICAgcmV0dXJuIG1vY2tBY2NvdW50U3VtbWFyeTtcclxuICB9XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0SW5zaWdodHMgPSBhc3luYyAoKSA9PiB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXBpLmdldCgnL2Rhc2hib2FyZC9pbnNpZ2h0cycpO1xyXG4gICAgcmV0dXJuIHJlc3BvbnNlLmRhdGEuZGF0YSBhcyBJbnNpZ2h0W107XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUubG9nKCdVc2luZyBtb2NrIGluc2lnaHRzIGRhdGEnKTtcclxuICAgIHJldHVybiBtb2NrSW5zaWdodHM7XHJcbiAgfVxyXG59OyAiXSwibmFtZXMiOlsiYXBpIiwibW9ja1RyYW5zYWN0aW9ucyIsImlkIiwibmFtZSIsImFtb3VudCIsImRhdGUiLCJjYXRlZ29yeSIsImFjY291bnQiLCJub3RlcyIsIm1vY2tBY2NvdW50U3VtbWFyeSIsInRvdGFsQmFsYW5jZSIsIm1vbnRobHlJbmNvbWUiLCJtb250aGx5RXhwZW5zZXMiLCJzYXZpbmdzUmF0ZSIsIm1vY2tJbnNpZ2h0cyIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJkYXRhIiwibGFiZWwiLCJ2YWx1ZSIsInJlY29tbWVuZGF0aW9uIiwiZ2V0UmVjZW50VHJhbnNhY3Rpb25zIiwicmVzcG9uc2UiLCJnZXQiLCJlcnJvciIsImNvbnNvbGUiLCJsb2ciLCJnZXRBY2NvdW50U3VtbWFyeSIsImdldEluc2lnaHRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/dashboardApi.ts\n"));

/***/ })

});