"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/admin/page",{

/***/ "(app-pages-browser)/./src/lib/api.ts":
/*!************************!*\
  !*** ./src/lib/api.ts ***!
  \************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   changeEmail: () => (/* binding */ changeEmail),\n/* harmony export */   changePassword: () => (/* binding */ changePassword),\n/* harmony export */   changeUsername: () => (/* binding */ changeUsername),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n\n// Create a base API instance\nconst api = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n    baseURL: \"http://localhost:3001/api\" || 0,\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    withCredentials: true\n});\n// Add a request interceptor to include the auth token\napi.interceptors.request.use((config)=>{\n    // Get token from localStorage\n    const token = localStorage.getItem('accessToken');\n    // If token exists, add it to the headers\n    if (token) {\n        config.headers.Authorization = \"Bearer \".concat(token);\n    }\n    return config;\n}, (error)=>{\n    return Promise.reject(error);\n});\n// Add a response interceptor to handle errors\napi.interceptors.response.use((response)=>response, async (error)=>{\n    var _error_response, _error_response1;\n    // Ignore aborted requests during navigation\n    if (error.code === 'ECONNABORTED' || axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isCancel(error)) {\n        console.log('Request aborted or canceled, likely due to navigation');\n        return Promise.reject(error);\n    }\n    const originalRequest = error.config;\n    // Handle both 401 and 403 for token issues\n    if ((((_error_response = error.response) === null || _error_response === void 0 ? void 0 : _error_response.status) === 401 || ((_error_response1 = error.response) === null || _error_response1 === void 0 ? void 0 : _error_response1.status) === 403) && !originalRequest._retry) {\n        var _error_response_data_message, _error_response_data, _error_response2, _error_response_data_message1, _error_response_data1, _error_response3, _error_response_data_message2, _error_response_data2, _error_response4;\n        originalRequest._retry = true;\n        // Check the error message to see if it's related to token expiration\n        const isTokenError = ((_error_response2 = error.response) === null || _error_response2 === void 0 ? void 0 : (_error_response_data = _error_response2.data) === null || _error_response_data === void 0 ? void 0 : (_error_response_data_message = _error_response_data.message) === null || _error_response_data_message === void 0 ? void 0 : _error_response_data_message.includes('token')) || ((_error_response3 = error.response) === null || _error_response3 === void 0 ? void 0 : (_error_response_data1 = _error_response3.data) === null || _error_response_data1 === void 0 ? void 0 : (_error_response_data_message1 = _error_response_data1.message) === null || _error_response_data_message1 === void 0 ? void 0 : _error_response_data_message1.includes('expired')) || ((_error_response4 = error.response) === null || _error_response4 === void 0 ? void 0 : (_error_response_data2 = _error_response4.data) === null || _error_response_data2 === void 0 ? void 0 : (_error_response_data_message2 = _error_response_data2.message) === null || _error_response_data_message2 === void 0 ? void 0 : _error_response_data_message2.includes('invalid'));\n        // Only handle token-related errors\n        if (isTokenError) {\n            try {\n                // This is a token error, clear tokens and redirect to login\n                console.log('Token expired, clearing tokens and redirecting to login');\n                // Clear tokens to ensure we don't attempt to use them again\n                localStorage.removeItem('accessToken');\n                localStorage.removeItem('refreshToken');\n                // Redirect to login page with expired session parameter\n                window.location.href = '/auth/login?session=expired';\n                return Promise.reject(error);\n            } catch (refreshError) {\n                console.error('Error during session expiry handling:', refreshError);\n                window.location.href = '/auth/login';\n                return Promise.reject(refreshError);\n            }\n        } else {\n            // For non-token related 401/403 errors, just reject\n            return Promise.reject(error);\n        }\n    }\n    return Promise.reject(error);\n});\n// Add these functions to make API calls to our new endpoints\nconst changeEmail = async (newEmail, password)=>{\n    try {\n        const response = await api.post('/auth/change-email', {\n            newEmail,\n            password\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Error changing email:', error);\n        throw error;\n    }\n};\nconst changePassword = async (currentPassword, newPassword)=>{\n    try {\n        const response = await api.post('/auth/change-password', {\n            currentPassword,\n            newPassword\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Error changing password:', error);\n        throw error;\n    }\n};\nconst changeUsername = async (newUsername)=>{\n    try {\n        const response = await api.post('/auth/change-username', {\n            newUsername\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Error changing username:', error);\n        throw error;\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (api);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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TSxDQUFDRjtRQUN4QjtJQUNGO0lBRUEsT0FBT0MsUUFBUUMsTUFBTSxDQUFDRjtBQUN4QjtBQUdGLDZEQUE2RDtBQUN0RCxNQUFNb0IsY0FBYyxPQUFPQyxVQUFrQkM7SUFDbEQsSUFBSTtRQUNGLE1BQU1uQixXQUFXLE1BQU1uQixJQUFJdUMsSUFBSSxDQUFDLHNCQUFzQjtZQUNwREY7WUFDQUM7UUFDRjtRQUNBLE9BQU9uQixTQUFTUyxJQUFJO0lBQ3RCLEVBQUUsT0FBT1osT0FBTztRQUNkTSxRQUFRTixLQUFLLENBQUMseUJBQXlCQTtRQUN2QyxNQUFNQTtJQUNSO0FBQ0YsRUFBRTtBQUVLLE1BQU13QixpQkFBaUIsT0FBT0MsaUJBQXlCQztJQUM1RCxJQUFJO1FBQ0YsTUFBTXZCLFdBQVcsTUFBTW5CLElBQUl1QyxJQUFJLENBQUMseUJBQXlCO1lBQ3ZERTtZQUNBQztRQUNGO1FBQ0EsT0FBT3ZCLFNBQVNTLElBQUk7SUFDdEIsRUFBRSxPQUFPWixPQUFPO1FBQ2RNLFFBQVFOLEtBQUssQ0FBQyw0QkFBNEJBO1FBQzFDLE1BQU1BO0lBQ1I7QUFDRixFQUFFO0FBRUssTUFBTTJCLGlCQUFpQixPQUFPQztJQUNuQyxJQUFJO1FBQ0YsTUFBTXpCLFdBQVcsTUFBTW5CLElBQUl1QyxJQUFJLENBQUMseUJBQXlCO1lBQ3ZESztRQUNGO1FBQ0EsT0FBT3pCLFNBQVNTLElBQUk7SUFDdEIsRUFBRSxPQUFPWixPQUFPO1FBQ2RNLFFBQVFOLEtBQUssQ0FBQyw0QkFBNEJBO1FBQzFDLE1BQU1BO0lBQ1I7QUFDRixFQUFFO0FBRUYsaUVBQWVoQixHQUFHQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9saWIvYXBpLnRzPzJmYWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJztcblxuLy8gQ3JlYXRlIGEgYmFzZSBBUEkgaW5zdGFuY2VcbmNvbnN0IGFwaSA9IGF4aW9zLmNyZWF0ZSh7XG4gIGJhc2VVUkw6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FQSV9VUkwgfHwgJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMS9hcGknLFxuICBoZWFkZXJzOiB7XG4gICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgfSxcbiAgd2l0aENyZWRlbnRpYWxzOiB0cnVlLFxufSk7XG5cbi8vIEFkZCBhIHJlcXVlc3QgaW50ZXJjZXB0b3IgdG8gaW5jbHVkZSB0aGUgYXV0aCB0b2tlblxuYXBpLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZShcbiAgKGNvbmZpZykgPT4ge1xuICAgIC8vIEdldCB0b2tlbiBmcm9tIGxvY2FsU3RvcmFnZVxuICAgIGNvbnN0IHRva2VuID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2FjY2Vzc1Rva2VuJyk7XG4gICAgXG4gICAgLy8gSWYgdG9rZW4gZXhpc3RzLCBhZGQgaXQgdG8gdGhlIGhlYWRlcnNcbiAgICBpZiAodG9rZW4pIHtcbiAgICAgIGNvbmZpZy5oZWFkZXJzLkF1dGhvcml6YXRpb24gPSBgQmVhcmVyICR7dG9rZW59YDtcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIGNvbmZpZztcbiAgfSxcbiAgKGVycm9yKSA9PiB7XG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTtcbiAgfVxuKTtcblxuLy8gQWRkIGEgcmVzcG9uc2UgaW50ZXJjZXB0b3IgdG8gaGFuZGxlIGVycm9yc1xuYXBpLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoXG4gIChyZXNwb25zZSkgPT4gcmVzcG9uc2UsXG4gIGFzeW5jIChlcnJvcikgPT4ge1xuICAgIC8vIElnbm9yZSBhYm9ydGVkIHJlcXVlc3RzIGR1cmluZyBuYXZpZ2F0aW9uXG4gICAgaWYgKGVycm9yLmNvZGUgPT09ICdFQ09OTkFCT1JURUQnIHx8IGF4aW9zLmlzQ2FuY2VsKGVycm9yKSkge1xuICAgICAgY29uc29sZS5sb2coJ1JlcXVlc3QgYWJvcnRlZCBvciBjYW5jZWxlZCwgbGlrZWx5IGR1ZSB0byBuYXZpZ2F0aW9uJyk7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpO1xuICAgIH1cbiAgICBcbiAgICBjb25zdCBvcmlnaW5hbFJlcXVlc3QgPSBlcnJvci5jb25maWc7XG4gICAgXG4gICAgLy8gSGFuZGxlIGJvdGggNDAxIGFuZCA0MDMgZm9yIHRva2VuIGlzc3Vlc1xuICAgIGlmICgoZXJyb3IucmVzcG9uc2U/LnN0YXR1cyA9PT0gNDAxIHx8IGVycm9yLnJlc3BvbnNlPy5zdGF0dXMgPT09IDQwMykgJiYgIW9yaWdpbmFsUmVxdWVzdC5fcmV0cnkpIHtcbiAgICAgIG9yaWdpbmFsUmVxdWVzdC5fcmV0cnkgPSB0cnVlO1xuICAgICAgXG4gICAgICAvLyBDaGVjayB0aGUgZXJyb3IgbWVzc2FnZSB0byBzZWUgaWYgaXQncyByZWxhdGVkIHRvIHRva2VuIGV4cGlyYXRpb25cbiAgICAgIGNvbnN0IGlzVG9rZW5FcnJvciA9IGVycm9yLnJlc3BvbnNlPy5kYXRhPy5tZXNzYWdlPy5pbmNsdWRlcygndG9rZW4nKSB8fCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3IucmVzcG9uc2U/LmRhdGE/Lm1lc3NhZ2U/LmluY2x1ZGVzKCdleHBpcmVkJykgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3IucmVzcG9uc2U/LmRhdGE/Lm1lc3NhZ2U/LmluY2x1ZGVzKCdpbnZhbGlkJyk7XG4gICAgICBcbiAgICAgIC8vIE9ubHkgaGFuZGxlIHRva2VuLXJlbGF0ZWQgZXJyb3JzXG4gICAgICBpZiAoaXNUb2tlbkVycm9yKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgLy8gVGhpcyBpcyBhIHRva2VuIGVycm9yLCBjbGVhciB0b2tlbnMgYW5kIHJlZGlyZWN0IHRvIGxvZ2luXG4gICAgICAgICAgY29uc29sZS5sb2coJ1Rva2VuIGV4cGlyZWQsIGNsZWFyaW5nIHRva2VucyBhbmQgcmVkaXJlY3RpbmcgdG8gbG9naW4nKTtcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBDbGVhciB0b2tlbnMgdG8gZW5zdXJlIHdlIGRvbid0IGF0dGVtcHQgdG8gdXNlIHRoZW0gYWdhaW5cbiAgICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgnYWNjZXNzVG9rZW4nKTtcbiAgICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgncmVmcmVzaFRva2VuJyk7XG4gICAgICAgICAgXG4gICAgICAgICAgLy8gUmVkaXJlY3QgdG8gbG9naW4gcGFnZSB3aXRoIGV4cGlyZWQgc2Vzc2lvbiBwYXJhbWV0ZXJcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9ICcvYXV0aC9sb2dpbj9zZXNzaW9uPWV4cGlyZWQnO1xuICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7XG4gICAgICAgIH0gY2F0Y2ggKHJlZnJlc2hFcnJvcikge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGR1cmluZyBzZXNzaW9uIGV4cGlyeSBoYW5kbGluZzonLCByZWZyZXNoRXJyb3IpO1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gJy9hdXRoL2xvZ2luJztcbiAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QocmVmcmVzaEVycm9yKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gRm9yIG5vbi10b2tlbiByZWxhdGVkIDQwMS80MDMgZXJyb3JzLCBqdXN0IHJlamVjdFxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpO1xuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpO1xuICB9XG4pO1xuXG4vLyBBZGQgdGhlc2UgZnVuY3Rpb25zIHRvIG1ha2UgQVBJIGNhbGxzIHRvIG91ciBuZXcgZW5kcG9pbnRzXG5leHBvcnQgY29uc3QgY2hhbmdlRW1haWwgPSBhc3luYyAobmV3RW1haWw6IHN0cmluZywgcGFzc3dvcmQ6IHN0cmluZykgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXBpLnBvc3QoJy9hdXRoL2NoYW5nZS1lbWFpbCcsIHsgXG4gICAgICBuZXdFbWFpbCwgXG4gICAgICBwYXNzd29yZCBcbiAgICB9KTtcbiAgICByZXR1cm4gcmVzcG9uc2UuZGF0YTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBjaGFuZ2luZyBlbWFpbDonLCBlcnJvcik7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn07XG5cbmV4cG9ydCBjb25zdCBjaGFuZ2VQYXNzd29yZCA9IGFzeW5jIChjdXJyZW50UGFzc3dvcmQ6IHN0cmluZywgbmV3UGFzc3dvcmQ6IHN0cmluZykgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXBpLnBvc3QoJy9hdXRoL2NoYW5nZS1wYXNzd29yZCcsIHsgXG4gICAgICBjdXJyZW50UGFzc3dvcmQsIFxuICAgICAgbmV3UGFzc3dvcmQgXG4gICAgfSk7XG4gICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgY2hhbmdpbmcgcGFzc3dvcmQ6JywgZXJyb3IpO1xuICAgIHRocm93IGVycm9yO1xuICB9XG59O1xuXG5leHBvcnQgY29uc3QgY2hhbmdlVXNlcm5hbWUgPSBhc3luYyAobmV3VXNlcm5hbWU6IHN0cmluZykgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXBpLnBvc3QoJy9hdXRoL2NoYW5nZS11c2VybmFtZScsIHsgXG4gICAgICBuZXdVc2VybmFtZSBcbiAgICB9KTtcbiAgICByZXR1cm4gcmVzcG9uc2UuZGF0YTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBjaGFuZ2luZyB1c2VybmFtZTonLCBlcnJvcik7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGFwaTsgIl0sIm5hbWVzIjpbImF4aW9zIiwiYXBpIiwiY3JlYXRlIiwiYmFzZVVSTCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19BUElfVVJMIiwiaGVhZGVycyIsIndpdGhDcmVkZW50aWFscyIsImludGVyY2VwdG9ycyIsInJlcXVlc3QiLCJ1c2UiLCJjb25maWciLCJ0b2tlbiIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJBdXRob3JpemF0aW9uIiwiZXJyb3IiLCJQcm9taXNlIiwicmVqZWN0IiwicmVzcG9uc2UiLCJjb2RlIiwiaXNDYW5jZWwiLCJjb25zb2xlIiwibG9nIiwib3JpZ2luYWxSZXF1ZXN0Iiwic3RhdHVzIiwiX3JldHJ5IiwiaXNUb2tlbkVycm9yIiwiZGF0YSIsIm1lc3NhZ2UiLCJpbmNsdWRlcyIsInJlbW92ZUl0ZW0iLCJ3aW5kb3ciLCJsb2NhdGlvbiIsImhyZWYiLCJyZWZyZXNoRXJyb3IiLCJjaGFuZ2VFbWFpbCIsIm5ld0VtYWlsIiwicGFzc3dvcmQiLCJwb3N0IiwiY2hhbmdlUGFzc3dvcmQiLCJjdXJyZW50UGFzc3dvcmQiLCJuZXdQYXNzd29yZCIsImNoYW5nZVVzZXJuYW1lIiwibmV3VXNlcm5hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/api.ts\n"));

/***/ })

});