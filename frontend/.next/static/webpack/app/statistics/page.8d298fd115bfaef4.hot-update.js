"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/statistics/page",{

/***/ "(app-pages-browser)/./src/lib/statisticsApi.ts":
/*!**********************************!*\
  !*** ./src/lib/statisticsApi.ts ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchCategoryBreakdown: () => (/* binding */ fetchCategoryBreakdown),\n/* harmony export */   fetchIncomeExpensesChart: () => (/* binding */ fetchIncomeExpensesChart),\n/* harmony export */   fetchMonthlyOverview: () => (/* binding */ fetchMonthlyOverview),\n/* harmony export */   fetchMonthlySummaries: () => (/* binding */ fetchMonthlySummaries),\n/* harmony export */   fetchRecurringExpenses: () => (/* binding */ fetchRecurringExpenses),\n/* harmony export */   fetchStatistics: () => (/* binding */ fetchStatistics)\n/* harmony export */ });\n/* harmony import */ var _lib_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/api */ \"(app-pages-browser)/./src/lib/api.ts\");\n\n// Fetch statistics data for a given period\nasync function fetchStatistics(period, year) {\n    try {\n        const response = await _lib_api__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/statistics/\".concat(period, \"?year=\").concat(year));\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching statistics:', error);\n        throw error;\n    }\n}\n// Get monthly income and expenses chart data\nasync function fetchIncomeExpensesChart(period, year) {\n    try {\n        const response = await _lib_api__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/statistics/income-expenses/\".concat(period, \"?year=\").concat(year));\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching income-expenses chart data:', error);\n        throw error;\n    }\n}\n// Get expense categories breakdown\nasync function fetchCategoryBreakdown(period, year) {\n    try {\n        const response = await _lib_api__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/statistics/categories/\".concat(period, \"?year=\").concat(year));\n        // Add colors to the categories (this would come from the backend ideally)\n        const colors = [\n            '#f87171',\n            '#60a5fa',\n            '#4ade80',\n            '#c084fc',\n            '#fbbf24',\n            '#a78bfa',\n            '#34d399',\n            '#f472b6'\n        ];\n        return response.data.map((item, index)=>({\n                ...item,\n                color: colors[index % colors.length]\n            }));\n    } catch (error) {\n        console.error('Error fetching category breakdown data:', error);\n        throw error;\n    }\n}\n// Get recurring expenses breakdown\nasync function fetchRecurringExpenses(period, year) {\n    try {\n        const response = await _lib_api__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/statistics/recurring/\".concat(period, \"?year=\").concat(year));\n        // Define fixed colors for recurring types\n        const typeColors = {\n            'One-time': '#f87171',\n            'Monthly': '#60a5fa',\n            'Quarterly': '#4ade80',\n            'Yearly': '#c084fc'\n        };\n        return response.data.map((item)=>({\n                ...item,\n                color: typeColors[item.name] || '#94a3b8'\n            }));\n    } catch (error) {\n        console.error('Error fetching recurring expenses data:', error);\n        throw error;\n    }\n}\n// Get monthly summaries\nasync function fetchMonthlySummaries(year) {\n    try {\n        const response = await _lib_api__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/statistics/summaries?year=\".concat(year));\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching monthly summaries:', error);\n        throw error;\n    }\n}\n// Add this new function to get the current month overview\nasync function fetchMonthlyOverview(month, year) {\n    try {\n        const currentMonth = month || new Date().getMonth() + 1;\n        const currentYear = year || new Date().getFullYear();\n        const response = await _lib_api__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/statistics/overview?month=\".concat(currentMonth, \"&year=\").concat(currentYear));\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching monthly overview:', error);\n        return {\n            totalIncome: 0,\n            totalExpenses: 0,\n            remainingBudget: 0\n        };\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/statisticsApi.ts\n"));

/***/ })

});